name: Go
env:
  # needed for the --check tests
  GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}

on:
  push:
  pull_request:

jobs:
  go:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        go: ["1.15", "1.18"]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Go ${{ matrix.go }}
        uses: actions/setup-go@v3.2.0
        with:
          go-version: ${{ matrix.go }}
          
      - name: Cache
        uses: actions/cache@v3
        with:
          # In order:
          # * Module download cache
          # * Build cache (Linux)
          # * Build cache (Mac)
          # * Build cache (Windows)
          path: |
            ~/go/pkg/mod
            ~/.cache/go-build
            ~/Library/Caches/go-build
            ~\AppData\Local\go-build
          key: ${{ runner.os }}-go-${{ matrix.go-version }}-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-${{ matrix.go-version }}-

      - name: Install cURL Headers
        uses: lyricwulf/abc@v1
        with:
          linux: libcurl4-openssl-dev

      - name: Build
        run: go build -v -tags libcurl ./...

      - name: Test
        run: go test -v -tags libcurl  ./...
     
      - name: Coverage
        run: |
          go test -cover -coverprofile coverage1.out ./...
          go test -cover -coverprofile coverage2.out -tags libcurl  ./...
        
      - name: Codecov
        uses: codecov/codecov-action@v3.1.0
        with:
          files: coverage1.out,coverage2.out

  win:
    strategy:
      matrix:
        os: [windows-latest]
        go: ["1.15", "1.18"]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3.2.0
        with:
          go-version: ${{ matrix.go }}
      - run: printenv|sort
      - run: go build -v ./...
      #- run: go test -v ./...
